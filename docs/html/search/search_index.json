{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bono LLM Coding Agents and Orchestration for PHP","text":"<p>PHP LLM Coding Agents Automated multi-agent architecture for code generation, analysis, and orchestration with support for various AI providers.</p> <p>Find more details in the html-documentation.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Multi-agent architecture (Architect, Coder, Orchestrator)</li> <li>Support for various LLM providers (e.g. Ollama)</li> <li>Caching with File-Cache, Array-Cache, and Decorator</li> <li>Modular design (Clean Architecture, CQRS, Event-Driven)</li> <li>Integration and unit tests</li> <li>Compatible with PHP 8.2+</li> </ul>"},{"location":"architecture/","title":"Architektur","text":"<p>Das Projekt folgt einer modularen Clean Architecture mit CQRS und Event-Driven Ans\u00e4tzen.</p>"},{"location":"architecture/#verzeichnisstruktur","title":"Verzeichnisstruktur","text":"<ul> <li><code>src/</code> \u2013 Hauptquellcode (Agenten, Provider, Cache, Parser, Tools)</li> <li><code>test/</code> \u2013 Unit- und Integrationstests</li> <li><code>generated/</code> \u2013 Generierter Beispielcode</li> <li><code>config/</code> \u2013 Konfigurationsdateien</li> <li><code>docs/</code> \u2013 Dokumentation</li> </ul>"},{"location":"architecture/#hauptkomponenten","title":"Hauptkomponenten","text":"<ul> <li>Agenten: Architekt, Coder, Orchestrator</li> <li>Provider: Verschiedene LLM-Provider (z.B. Ollama)</li> <li>Cache: File-Cache, Array-Cache, Decorator</li> <li>Parser &amp; Tools: Unterst\u00fctzung f\u00fcr Analyse und Code-Generierung</li> </ul>"},{"location":"development/","title":"Development","text":""},{"location":"development/#requirements","title":"Requirements","text":"<ul> <li>PHP &gt;= 8.2</li> <li>Composer</li> <li>Optional: Ollama, APCu</li> </ul>"},{"location":"development/#setup","title":"Setup","text":"<ol> <li>Clone the repository:     <code>bash     git clone https://github.com/angelobono/bono-llm-coding-agents.git     cd bono-llm</code></li> <li>Install dependencies:     <code>bash     composer install</code></li> <li>(Optional) Install Ollama and download models:     <code>bash     ollama pull llama3.2:3b     ollama pull deepseek-coder:6.7b</code></li> </ol>"},{"location":"development/#code-style","title":"Code Style","text":"<ul> <li>PSR-12 Coding Standard</li> <li>Static analysis with Psalm and PHPStan</li> </ul>"},{"location":"development/#testing","title":"Testing","text":"<p>Run all tests:</p> <pre><code>composer test\n</code></pre>"},{"location":"development/#test-coverage","title":"Test coverage:","text":"<pre><code>composer test-coverage\n</code></pre>"},{"location":"development/#static-analysis","title":"Static Analysis","text":"<pre><code>composer analyse\ncomposer psalm\n</code></pre>"},{"location":"development/#code-style-check-and-fix","title":"Code-Style check and fix","text":"<pre><code>composer cs-check\ncomposer cs-fix\n</code></pre>"},{"location":"development/#development-guidelines","title":"Development Guidelines","text":"<ul> <li>Create new classes in the src/ directory, tests in the corresponding test/ path.</li> <li>Use src/Provider/ for LLM providers, src/Factory/ for agent factories.</li> </ul>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/#example-using-the-ollama-llm-provider","title":"Example using the Ollama LLM provider:","text":"<pre><code>use Bono\\Factory\\ArchitectAgentFactory;\nuse Bono\\Factory\\CoderAgentFactory;\nuse Bono\\Orchestrator;\nuse Bono\\Provider\\OllamaProvider;\nuse Bono\\Tests\\Mock\\StableDiffusionMock;\n\nuse function array_keys;\nuse function implode;\n\n// 1) REAL provider \u2192 uses your local Ollama\n$ollama = new OllamaProvider('http://localhost:11434/api');\n\n// 2) Agents from factory\n$architect = (new ArchitectAgentFactory($ollama))-&gt;__invoke();\n$coder     = (new CoderAgentFactory($ollama))-&gt;__invoke();\n\n// 3) Build orchestrator\n$orchestrator = new Orchestrator($architect, $coder);\n\n// 4) Register StableDiffusion MOCK (no real API call)\n$orchestrator-&gt;registerTool('stable_diffusion', new StableDiffusionMock());\n\n// 5) Test user story\n$userStory = &lt;&lt;&lt;TXT\nAs a doctor, I want a dashboard with patient records.\nAs a developer, I want us to use only REST APIs.\nThe dashboard should show an overview of all patients, including name, age, and diagnosis.\nThere should also be a search function to find patients by name.\nTXT;\n\n// 6) Execute task\n$result = $orchestrator-&gt;processTask($userStory);\n\n// Optional \u2192 Output logging\necho \"\\nAnalysis complexity: \" . $result-&gt;analysis-&gt;complexity;\necho \"\\nGenerated files: \" . implode(', ', array_keys($result-&gt;files));\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#installation","title":"Installation","text":"<p>Requirements:</p> <ul> <li>PHP &gt;= 8.2</li> <li>Composer</li> <li>Optional: Ollama</li> </ul> <p>Step 1: Clone the repository</p> <pre><code>git clone https://github.com/angelobono/bono-llm-coding-agents.git\ncd bono-llm\n</code></pre> <p>Step 2: Install Ollama (see Ollama website or use a docker image)</p> <p>Step 3: Download models, the default setup uses:</p> <pre><code>ollama pull llama3.2:3b\nollama pull deepseek-coder:6.7b:\n</code></pre> <p>Step 3: Install dependencies</p> <pre><code>composer install\n</code></pre>"},{"location":"license/","title":"Lizenz","text":"<p>BSD 3-Clause License</p> <p>Copyright (c) 2022 Angelo Bono All rights reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ol> <li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li> <li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li> <li>Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</li> </ol> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"}]}